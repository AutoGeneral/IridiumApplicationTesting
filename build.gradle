import org.apache.tools.ant.filters.ReplaceTokens;

buildscript {
    repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		maven {
			url 'http://prod-vm-fv-ag-snx-x1.budgetdirect.com.au:8081/nexus/content/groups/public'
		}
		mavenCentral()
		mavenLocal()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
    }
}

/*
 Define the URL to the internal Nexus instance
*/
def nexusProxy = 'http://prod-vm-fv-ag-snx-x1.budgetdirect.com.au:8081/nexus/content/groups/public'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'checkstyle'

mainClassName = "au.com.agic.apptesting.Main"
archivesBaseName = "WebAppTesting"
sourceCompatibility = 1.8

jar {
    baseName = 'webapptesting'
    version = '2.0.0-SNAPSHOT'
    manifest {
        attributes(
                "Permissions": "all-permissions",
                /*
                    ZAP makes some assumptions about the availability of these settings. We copy them
                    from the ZAP MAINIFEST.MF file.
                 */
                "Create-Date": "2016-06-03",
                "Implementation-Version": "2.5.0"
        )
    }
}

javadoc {
    failOnError = false
}

shadowJar {
    classifier = ''
}

/*
    Save the current date and time in the properties file
 */
processResources {
    filesMatching('**/build.properties') {
        filter ReplaceTokens, tokens: [
                "Build": new Date().format("yyyyMMddHHmmss")
        ]
    }
}

repositories {
    mavenLocal()
	mavenCentral()
	maven { url nexusProxy }
	maven { url "http://repository.springsource.com/maven/bundles/external" }
}

def mysqlDriverVersion = '5.1.34'
def guavaVersion = '19.0-SNAPSHOT'
def seleniumVersion = '2.53.1'
def validationVersion = '1.0.0.GA'
def cucumberVersion = '1.2.4'
def logbackVersion = '1.1.3'
def slf4jVersion = '1.7.12'
def threadPoolVersion = '20030513.073905'
def commonsIoVersion = '2.5'
def commonsLangVersion = '3.4'
def operaDriverVersion = '1.5'
def phontomJsDriverVersion = '1.3.0'        // https://github.com/detro/ghostdriver/issues/397
def cucumberHtmlFormatterVersion = '0.2.3'
def monteRepackVersion = '1.0.1'
def javaSlangVersion = '2.0.0-RC4'
def zapAPIVersion = '1.0.0'
def browsermobVersion = '2.1.1'
def compressCommonsVersion = '1.12'
def xmlApisVersion =  '1.4.01'

configurations.all {
	resolutionStrategy {
		force 'xml-apis:xml-apis:1.4.01'
	}
}

dependencies {
    compile 'mysql:mysql-connector-java:' + mysqlDriverVersion
    compile 'com.google.guava:guava:' + guavaVersion
    compile 'org.seleniumhq.selenium:selenium-java:' + seleniumVersion
    compile 'javax.validation:validation-api:' + validationVersion
    compile 'info.cukes:cucumber-java:' + cucumberVersion
    compile 'info.cukes:cucumber-html:' + cucumberHtmlFormatterVersion
    compile 'ch.qos.logback:logback-classic:' + logbackVersion
    compile 'ch.qos.logback:logback-core:' + logbackVersion
    compile 'org.slf4j:jul-to-slf4j:' + slf4jVersion
    compile 'commons-threadpool:commons-threadpool:' + threadPoolVersion
    compile 'commons-io:commons-io:' + commonsIoVersion
    compile 'org.apache.commons:commons-lang3:' + commonsLangVersion
    compile 'org.seleniumhq.selenium:selenium-chrome-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-firefox-driver:' + seleniumVersion
    compile 'org.seleniumhq.selenium:selenium-safari-driver:' + seleniumVersion
    compile 'com.codeborne:phantomjsdriver:' + phontomJsDriverVersion
    compile 'com.opera:operadriver:' + operaDriverVersion
    compile 'org.seleniumhq.selenium:selenium-ie-driver:' + seleniumVersion
    compile 'com.pojosontheweb:monte-repack:' + monteRepackVersion
    compile 'com.javaslang:javaslang:' + javaSlangVersion
    compile 'org.zaproxy:zap-clientapi:' + zapAPIVersion
    compile files ("lib/zap-2.5.0.jar", "lib/cucumber-core-1.2.5-AG-SNAPSHOT.jar")
    compile 'net.lightbody.bmp:browsermob-core:' + browsermobVersion
    compile group: 'org.apache.commons', name: 'commons-compress', version: compressCommonsVersion
	compile group: 'xml-apis', name: 'xml-apis', version: xmlApisVersion

    /*
        The following are dependencies required by ZAP
     */
    compile group: 'edu.stanford.ejalbert', name: 'BrowserLauncher2', version: '1.3'
    compile group: 'org.owasp.jbrofuzz', name: 'jbrofuzz', version: '2.5.1'
    compile group: 'org.owasp.jbrofuzz', name: 'jbrofuzz-encoder', version: '2.5.1'
    compile group: 'org.apache.ant', name: 'ant', version: '1.9.7'
    compile group: 'org.bouncycastle', name: 'bcmail-jdk15on', version: '1.54'
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.54'
    compile group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.54'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.2'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2.2'
    compile group: 'commons-configuration', name: 'commons-configuration', version: '1.10'
    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
    compile group: 'commons-jxpath', name: 'commons-jxpath', version: '1.3'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'commons-logging', name: 'commons-logging-api', version: '1.1'
    compile group: 'com.googlecode.java-diff-utils', name: 'diffutils', version: '1.3.0'
    compile group: 'net.sf.ezmorph', name: 'ezmorph', version: '1.0.6'
    compile group: 'edu.umass.cs.benchlab', name: 'harlib', version: '1.1.2'
    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.3.4'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.2'
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.5'
    compile group: 'com.github.zafarkhaja', name: 'java-semver', version: '0.9.0'
    compile group: 'org.jdom', name: 'jdom', version: '1.1.3'
    compile group: 'net.htmlparser.jericho', name: 'jericho-html', version: '3.4'
    compile group: 'org.jfree', name: 'jfreechart', version: '1.0.19'
    compile group: 'org.jgrapht', name: 'jgrapht-core', version: '0.9.2'
    compile group: 'com.sun.woodstock.dependlibs', name: 'jh', version: '2.0'
    compile group: 'net.sf.json-lib', name: 'json-lib', version: '2.2.3', classifier: 'jdk15'
    compile group: 'com.yuvimasory', name: 'orange-extensions', version: '1.3.0'
    compile group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '2.5.8'
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
    compile group: 'org.swinglabs', name: 'swingx', version: '1.6.1'
    compile group: 'com.io7m.xom', name: 'xom', version: '1.2.10'
    compile group: 'log4j', name: 'log4j', version: '1.2.17'


    compile 'junit:junit:4.12'
    //testCompile 'info.cukes:cucumber-junit:' + cucumberVersion
    //testCompile 'info.cukes:cucumber-picocontainer:' + cucumberVersion
}

/*
    System properties need to be passed into the JVM running the tests
 */
def passThroughProperties = [
        "webdriver.chrome.driver",
        "webdriver.ie.driver",
        "webdriver.opera.driver",
        "phantomjs.binary.path",
        "testDestination",
        "testSource",
        "groupName",
        "featureGroupName",
        "configuration",
        "leaveWindowsOpen",
        "localBrowser",
        "appURLOverride",
        "numberDataSets",
        "numberOfThreads",
        "tagsOverride",
        "dataset",
        "openReportFile",
        "saveReportsInHomeDir",
        "importBaseUrl",
        "numberURLs",
        "enableVideoCapture",
        "enableScenarioScreenshots",
        "startInternalProxy"
]

test {
    for (p in passThroughProperties) {
        systemProperty p, System.properties[p]
    }
}

run {
    for (p in passThroughProperties) {
        systemProperty p, System.properties[p]
    }
}

checkstyle {
	toolVersion = '6.18'
	configFile = rootProject.file("checkstyle.xml");
	showViolations = true
	ignoreFailures = false
}

tasks.withType(Checkstyle) {
	ignoreFailures = false
	reports {
		html.destination rootProject.file("${buildDir}/reports/checkstyle.html")
	}
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.14'
}
